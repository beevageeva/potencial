Programas python:

exp_compare.py
Muestra varios gráficos en la misma figura para poder compararlos cuando se cambian los 2 parametros (r0 y rhoC):
Parametros:
--type=p|d|v|m|dp
--rhoC=<value>[,<value>,...]
--r0=<value>[,<value>,...]
--fixed=r0|rhoC
  cual de los parametros es fijo
--rmax=<value> 
	radio maximo para mostrar el gráfico 

Por defecto  la velocidad, masa y potencial se calculan de forma analítica(más rápido), pero eso se podría cambiar con cambiando el import de las funciones desde exp_num en lugar de exp_an (ver exp_plot.py)

Ejemplos:
python exp_compare.py --type=d --rhoC=0.5e+5,1e5,1.5e5,2e+5 --r0=6.16e19 --rmax=5e20 --fixed=r0
python exp_compare.py --type=d --rhoC=1e5 --r0=1.54e19,3.1e19,4.62e19,6.16e19 --rmax=5e20 --fixed=rhoC
python exp_compare.py --type=dp --rhoC=0.5e+5,1e5,1.5e5,2e+5 --r0=6.16e19 --rmax=5e20 --fixed=r0
python exp_compare.py --type=dp --rhoC=1e5 --r0=1.54e19,3.1e19,4.62e19,6.16e19 --rmax=5e20 --fixed=rhoC
python exp_compare.py --type=p --rhoC=1e5 --r0=1.54e19,3.1e19,4.62e19,6.16e19 --rmax=1e22 --fixed=rhoC
python exp_compare.py --type=p --rhoC=0.5e+5,1e5,1.5e5,2e+5 --r0=6.16e19 --rmax=1e22 --fixed=r0
python exp_compare.py --type=m --rhoC=0.5e+5,1e5,1.5e5,2e+5 --r0=6.16e19 --rmax=8e20 --fixed=r0
python exp_compare.py --type=m --rhoC=1e5 --r0=1.54e19,3.1e19,4.62e19,6.16e19 --rmax=8e20 --fixed=rhoC
python exp_compare.py --type=v --rhoC=0.5e+5,1e5,1.5e5,2e+5 --r0=6.16e19 --rmax=1e22 --fixed=r0
python exp_compare.py --type=v --rhoC=1e5 --r0=1.54e19,3.1e19,4.62e19,6.16e19 --rmax=1e22 --fixed=rhoC


exp_plot.py 
Parametros:
--type=p|d|v|m|dp
--rhoC=<value> 
--r0=<value> 
--rmax=<value> 
	radio maximo para mostrar el gráfico 
--numerical

Ejemplos:
python exp_plot.py --type=v --rhoC=1e5 --r0=6.16e19 --rmax=1e22 --numerical
python exp_plot.py --type=v --rhoC=1e5 --r0=6.16e19 --rmax=1e22 


isochrone_plot.py muestra los graficos del potencial isocrono
Parametros:
--type=p|d|v|m|dp
--rhoC=<value> 
--mass=<value> 
--rmax=<value> 
	radio maximo para mostrar el gráfico 
el parametro original b se calcula a partir de rhoC y mass (total mass) - porque la idea fue de comparar con la distr. exponencial


plot_functions.py (para hacer los graficos de las funciones a integrar)
pt.py  (el primer programa para hacer los gráficos, mas general , pero no tiene mucho uso) ver readme_pt


sympyPot.py  calcula de forma analítica(usando sympy) vc, masa y densidad a partir de la función potencial
sympyDens.py calcula de forma analítica(usando sympy) las funciones potencial, masa y vc a partir de la funcion densidad (usando limites de integración 0 y r para la primera integral y epsilon y r para la segunda en el caso del potencial: ver pdf)
Se podría modificar para cualquier funcion densidad o potencial

